# Generated by Django 4.1.3 on 2025-07-23 11:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReadingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color for UI display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Reading Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReadingTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='group4.readingcategory')),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('content', models.TextField()),
                ('difficulty', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1'), ('C2', 'C2')], max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='readings', to='group4.readingcategory')),
                ('tags', models.ManyToManyField(blank=True, related_name='readings', to='group4.readingtag')),
            ],
            options={
                'ordering': ['difficulty', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='The question being asked')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('fill_blank', 'Fill in the Blank'), ('ordering', 'Ordering/Sequencing')], max_length=20)),
                ('correct_answer', models.TextField(blank=True, help_text='The correct answer (for non-multiple choice questions only)')),
                ('explanation', models.TextField(blank=True, help_text='Explanation of the correct answer')),
                ('points', models.IntegerField(default=1, help_text='Points awarded for correct answer')),
                ('order', models.IntegerField(default=0, help_text='Order of question in the reading')),
                ('reading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='group4.reading')),
            ],
            options={
                'ordering': ['reading', 'order'],
                'unique_together': {('reading', 'order')},
            },
        ),
        migrations.CreateModel(
            name='AttemptHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(help_text='Score for this specific attempt (0-100)')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('reading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='group4.reading')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Attempt',
                'verbose_name_plural': 'Attempt History',
                'ordering': ['-attempted_at'],
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_score', models.IntegerField(default=0, help_text='Best score achieved (0-100)')),
                ('total_attempts', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('reading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_results', to='group4.reading')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reading Result',
                'verbose_name_plural': 'Reading Results',
                'unique_together': {('user', 'reading')},
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=500)),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='group4.question')),
            ],
            options={
                'ordering': ['question', 'order'],
                'unique_together': {('question', 'order')},
            },
        ),
    ]
